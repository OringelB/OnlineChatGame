{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\OnlineProject\\\\client2\\\\src\\\\components\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Game(_ref) {\n  _s();\n  let {\n    socket,\n    room,\n    isUserFirst\n  } = _ref;\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [currentPlayer, setCurrentPlayer] = useState('X');\n  const [playerShape, setPlayerShape] = useState(\"\");\n  function checkGameOver() {\n    const winningConditions = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n    for (let i = 0; i < winningConditions.length; i++) {\n      const [a, b, c] = winningConditions[i];\n      if (board[a] && board[a] === board[b] && board[a] === board[c]) {\n        return board[a];\n      }\n    }\n    if (board.every(square => square !== null)) {\n      return 'draw';\n    }\n    return null;\n  }\n  function setPlayerShapeBasedOnIsUserFirst(isUserFirst) {\n    if (isUserFirst === 2) {\n      setPlayerShape(\"X\");\n    } else {\n      setPlayerShape(\"O\");\n    }\n  }\n  useEffect(() => {\n    setPlayerShapeBasedOnIsUserFirst(isUserFirst);\n    socket.on(\"change_game\", data => {\n      setBoard(data.newBoard);\n      setCurrentPlayer(isUserFirst === 2 ? 'X' : 'O');\n    });\n  }, [socket, isUserFirst]);\n  const handleSquareClick = index => {\n    if (board[index] !== null || currentPlayer !== playerShape) {\n      return;\n    }\n    const newBoard = [...board];\n    newBoard[index] = currentPlayer;\n    setBoard(newBoard);\n    socket.emit(\"updateGame\", {\n      room: room,\n      newBoard: newBoard\n    });\n    setCurrentPlayer(currentPlayer === 'X' ? 'O' : 'X');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"whos turn: \", currentPlayer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"you are: \", playerShape]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isUserFirst\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: board.map((square, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"square\",\n        onClick: () => handleSquareClick(index),\n        children: square\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(Game, \"zg+eTHuUts4JWEmKZz3m2O3qo8Q=\");\n_c = Game;\n;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","Game","socket","room","isUserFirst","board","setBoard","Array","fill","currentPlayer","setCurrentPlayer","playerShape","setPlayerShape","checkGameOver","winningConditions","i","length","a","b","c","every","square","setPlayerShapeBasedOnIsUserFirst","on","data","newBoard","handleSquareClick","index","emit","map"],"sources":["C:/Users/User/Desktop/OnlineProject/client2/src/components/Game.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction Game({ socket, room, isUserFirst }) {\r\n    const [board, setBoard] = useState(Array(9).fill(null));\r\n    const [currentPlayer, setCurrentPlayer] = useState('X');\r\n    const [playerShape, setPlayerShape] = useState(\"\");\r\n\r\n\r\n\r\n    function checkGameOver() {\r\n        const winningConditions = [\r\n          [0, 1, 2],\r\n          [3, 4, 5],\r\n          [6, 7, 8],\r\n          [0, 3, 6],\r\n          [1, 4, 7],\r\n          [2, 5, 8],\r\n          [0, 4, 8],\r\n          [2, 4, 6]\r\n        ];\r\n        for (let i = 0; i < winningConditions.length; i++) {\r\n          const [a, b, c] = winningConditions[i];\r\n          if (board[a] && board[a] === board[b] && board[a] === board[c]) {\r\n            return board[a];\r\n          }\r\n        }\r\n        if (board.every(square => square !== null)) {\r\n          return 'draw';\r\n        }\r\n        return null;\r\n      }\r\n      \r\n\r\n    function setPlayerShapeBasedOnIsUserFirst(isUserFirst) {\r\n        if (isUserFirst === 2) {\r\n            setPlayerShape(\"X\");\r\n        }\r\n        else{\r\n            setPlayerShape(\"O\")\r\n        }\r\n\r\n    }\r\n\r\n      useEffect(() => {\r\n        setPlayerShapeBasedOnIsUserFirst(isUserFirst);\r\n\r\n        socket.on(\"change_game\", (data) => {\r\n          setBoard(data.newBoard);\r\n          setCurrentPlayer(isUserFirst === 2 ? 'X' : 'O');\r\n        });\r\n      }, [socket,isUserFirst]);\r\n\r\n    const handleSquareClick = (index) => {\r\n\r\n        if (board[index] !== null || currentPlayer !== playerShape) {\r\n            return;\r\n        }\r\n        const newBoard = [...board];\r\n        newBoard[index] = currentPlayer;\r\n        setBoard(newBoard);\r\n        socket.emit(\"updateGame\", { room: room, newBoard: newBoard });\r\n        setCurrentPlayer(currentPlayer === 'X' ? 'O' : 'X');\r\n    };\r\n\r\n    return (\r\n        <div className=\"game\">\r\n            <h1>whos turn: {currentPlayer}</h1>\r\n            <h1>you are: {playerShape}</h1>\r\n            <h1>{isUserFirst}</h1>\r\n            <div className=\"board\">\r\n                {board.map((square, index) => (\r\n                    <div\r\n                        key={index}\r\n                        className=\"square\"\r\n                        onClick={() => handleSquareClick(index)}\r\n                    >\r\n                        {square}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Game;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}