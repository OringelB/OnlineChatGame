{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\OnlineProject\\\\client2\\\\src\\\\components\\\\Game.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Game(_ref) {\n  _s();\n  let {\n    socket,\n    room,\n    isUserFirst\n  } = _ref;\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [currentPlayer, setCurrentPlayer] = useState('X');\n  const [playerShape, setPlayerShape] = useState(\"\");\n  function setPlayerShapeBasedOnIsUserFirst(isUserFirst) {\n    if (isUserFirst === 2) {\n      setPlayerShape(\"X\");\n    } else {\n      setPlayerShape(\"O\");\n    }\n  }\n  useEffect(() => {\n    setPlayerShapeBasedOnIsUserFirst(isUserFirst);\n  }, [isUserFirst]); // this hook runs every time the component mounts or updates\n\n  useEffect(() => {\n    socket.on(\"change_game\", data => {\n      setBoard(data.newBoard);\n      setCurrentPlayer(playerShape === 'X' ? 'O' : 'X');\n    });\n  }, [socket]);\n  const handleSquareClick = index => {\n    if (board[index] !== null || currentPlayer !== playerShape) {\n      return;\n    }\n    const newBoard = [...board];\n    newBoard[index] = currentPlayer;\n    setBoard(newBoard);\n    socket.emit(\"updateGame\", {\n      room: room,\n      newBoard: newBoard\n    });\n    setCurrentPlayer(currentPlayer === 'X' ? 'O' : 'X');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"whos turn: \", currentPlayer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"you are: \", playerShape]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isUserFirst\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: board.map((square, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"square\",\n        onClick: () => handleSquareClick(index),\n        children: square\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(Game, \"XnxdrtW9E20zQ6vhon+scGvJMB4=\");\n_c = Game;\n;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["Game","socket","room","isUserFirst","board","setBoard","useState","Array","fill","currentPlayer","setCurrentPlayer","playerShape","setPlayerShape","setPlayerShapeBasedOnIsUserFirst","useEffect","on","data","newBoard","handleSquareClick","index","emit","map","square"],"sources":["C:/Users/User/Desktop/OnlineProject/client2/src/components/Game.js"],"sourcesContent":["function Game({ socket, room, isUserFirst }) {\r\n  const [board, setBoard] = useState(Array(9).fill(null));\r\n  const [currentPlayer, setCurrentPlayer] = useState('X');\r\n  const [playerShape, setPlayerShape] = useState(\"\");\r\n\r\n  function setPlayerShapeBasedOnIsUserFirst(isUserFirst) {\r\n    if (isUserFirst === 2) {\r\n      setPlayerShape(\"X\");\r\n    } else {\r\n      setPlayerShape(\"O\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setPlayerShapeBasedOnIsUserFirst(isUserFirst);\r\n  }, [isUserFirst]); // this hook runs every time the component mounts or updates\r\n\r\n  useEffect(() => {\r\n    socket.on(\"change_game\", (data) => {\r\n      setBoard(data.newBoard);\r\n      setCurrentPlayer(playerShape === 'X' ? 'O' : 'X');\r\n    });\r\n  }, [socket]);\r\n\r\n  const handleSquareClick = (index) => {\r\n    if (board[index] !== null || currentPlayer !== playerShape) {\r\n      return;\r\n    }\r\n    const newBoard = [...board];\r\n    newBoard[index] = currentPlayer;\r\n    setBoard(newBoard);\r\n    socket.emit(\"updateGame\", { room: room, newBoard: newBoard });\r\n    setCurrentPlayer(currentPlayer === 'X' ? 'O' : 'X');\r\n  };\r\n\r\n\r\n    return (\r\n        <div className=\"game\">\r\n            <h1>whos turn: {currentPlayer}</h1>\r\n            <h1>you are: {playerShape}</h1>\r\n            <h1>{isUserFirst}</h1>\r\n            <div className=\"board\">\r\n                {board.map((square, index) => (\r\n                    <div\r\n                        key={index}\r\n                        className=\"square\"\r\n                        onClick={() => handleSquareClick(index)}\r\n                    >\r\n                        {square}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Game;\r\n"],"mappings":";;;AAAA,SAASA,IAAI,OAAgC;EAAA;EAAA,IAA/B;IAAEC,MAAM;IAAEC,IAAI;IAAEC;EAAY,CAAC;EACzC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EACvD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGJ,QAAQ,CAAC,GAAG,CAAC;EACvD,MAAM,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAElD,SAASO,gCAAgC,CAACV,WAAW,EAAE;IACrD,IAAIA,WAAW,KAAK,CAAC,EAAE;MACrBS,cAAc,CAAC,GAAG,CAAC;IACrB,CAAC,MAAM;MACLA,cAAc,CAAC,GAAG,CAAC;IACrB;EACF;EAEAE,SAAS,CAAC,MAAM;IACdD,gCAAgC,CAACV,WAAW,CAAC;EAC/C,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEnBW,SAAS,CAAC,MAAM;IACdb,MAAM,CAACc,EAAE,CAAC,aAAa,EAAGC,IAAI,IAAK;MACjCX,QAAQ,CAACW,IAAI,CAACC,QAAQ,CAAC;MACvBP,gBAAgB,CAACC,WAAW,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IACnD,CAAC,CAAC;EACJ,CAAC,EAAE,CAACV,MAAM,CAAC,CAAC;EAEZ,MAAMiB,iBAAiB,GAAIC,KAAK,IAAK;IACnC,IAAIf,KAAK,CAACe,KAAK,CAAC,KAAK,IAAI,IAAIV,aAAa,KAAKE,WAAW,EAAE;MAC1D;IACF;IACA,MAAMM,QAAQ,GAAG,CAAC,GAAGb,KAAK,CAAC;IAC3Ba,QAAQ,CAACE,KAAK,CAAC,GAAGV,aAAa;IAC/BJ,QAAQ,CAACY,QAAQ,CAAC;IAClBhB,MAAM,CAACmB,IAAI,CAAC,YAAY,EAAE;MAAElB,IAAI,EAAEA,IAAI;MAAEe,QAAQ,EAAEA;IAAS,CAAC,CAAC;IAC7DP,gBAAgB,CAACD,aAAa,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EACrD,CAAC;EAGC,oBACI;IAAK,SAAS,EAAC,MAAM;IAAA,wBACjB;MAAA,0BAAgBA,aAAa;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eACnC;MAAA,wBAAcE,WAAW;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eAC/B;MAAA,UAAKR;IAAW;MAAA;MAAA;MAAA;IAAA,QAAM,eACtB;MAAK,SAAS,EAAC,OAAO;MAAA,UACjBC,KAAK,CAACiB,GAAG,CAAC,CAACC,MAAM,EAAEH,KAAK,kBACrB;QAEI,SAAS,EAAC,QAAQ;QAClB,OAAO,EAAE,MAAMD,iBAAiB,CAACC,KAAK,CAAE;QAAA,UAEvCG;MAAM,GAJFH,KAAK;QAAA;QAAA;QAAA;MAAA,QAMjB;IAAC;MAAA;MAAA;MAAA;IAAA,QACA;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd;AAAC,GAtDQnB,IAAI;AAAA,KAAJA,IAAI;AAsDZ;AAED,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}