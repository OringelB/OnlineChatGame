[{"C:\\Users\\User\\Desktop\\OnlineProject\\client2\\src\\index.js":"1","C:\\Users\\User\\Desktop\\OnlineProject\\client2\\src\\reportWebVitals.js":"2","C:\\Users\\User\\Desktop\\OnlineProject\\client2\\src\\App.js":"3","C:\\Users\\User\\Desktop\\OnlineProject\\client2\\src\\components\\LoginForm.js":"4","C:\\Users\\User\\Desktop\\OnlineProject\\client2\\src\\components\\UserList.js":"5","C:\\Users\\User\\Desktop\\OnlineProject\\client2\\src\\components\\RegistrationForm.js":"6","C:\\Users\\User\\Desktop\\OnlineProject\\client2\\src\\components\\Chat.js":"7","C:\\Users\\User\\Desktop\\OnlineProject\\client2\\src\\components\\JoinGame.js":"8","C:\\Users\\User\\Desktop\\OnlineProject\\client2\\src\\components\\Game.js":"9"},{"size":470,"mtime":1671096020537,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1670925998101,"results":"12","hashOfConfig":"11"},{"size":3726,"mtime":1671618248571,"results":"13","hashOfConfig":"11"},{"size":1830,"mtime":1671617599137,"results":"14","hashOfConfig":"11"},{"size":1635,"mtime":1671618205451,"results":"15","hashOfConfig":"11"},{"size":2161,"mtime":1671617850591,"results":"16","hashOfConfig":"11"},{"size":2333,"mtime":1671614680534,"results":"17","hashOfConfig":"11"},{"size":1117,"mtime":1671614229505,"results":"18","hashOfConfig":"11"},{"size":4859,"mtime":1671617327745,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"1spz1sn",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\OnlineProject\\client2\\src\\index.js",[],[],[],"C:\\Users\\User\\Desktop\\OnlineProject\\client2\\src\\reportWebVitals.js",[],[],"C:\\Users\\User\\Desktop\\OnlineProject\\client2\\src\\App.js",["52"],[],"import React, { useState, useEffect } from 'react';\nimport LoginForm from './components/LoginForm';\nimport RegistrationForm from './components/RegistrationForm';\nimport UserList from './components/UserList';\nimport axios from 'axios';\nimport io from \"socket.io-client\"\nimport \"./App.css\";\nimport JoinGame from './components/JoinGame';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nconst socket = io.connect(\"http://localhost:3000\");\n\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [username, setUsername] = useState(false);\n  const [oponentUser, setOponentUser] = useState(null);\n  const [showGame, setShowGame] = useState(false);\n  const [user, setUser] = useState(null);\n  const [room, setRoom] = useState(0);\n  const [showUsereList, setShowUserList] = useState(false);\n  const [showLeaveRoom, setShowLeaveRoom] = useState(false);\n\n\n\n\n\n\n  const getUserByUsername = (username) => {\n    return axios.get(`http://localhost:3000/users/${username}`)\n      .then(response => response.data)\n      .catch(error => {\n        // Handle the error if the request fails\n        console.error(error);\n      });\n  }\n\n  const changeUsername = (newUsername) => {\n    setUsername(newUsername);\n    setShowUserList(true)\n    return getUserByUsername(newUsername)\n      .then(user => {\n        setUser(user);\n      });\n  }\n\n\n  function setOponent(user) {\n    setOponentUser(user)\n  }\n\n\n  const handleOponent = oponent => {\n    setShowLeaveRoom(true);\n    setShowGame(true);\n    setOponent(oponent);\n    setShowUserList(false);\n    const room = createRoom(oponent);\n    socket.emit(\"join_room\", room);\n\n  };\n\n\n\n\n  function createRoom(opnent) {\n    const sortedUserIds = [user.userId, opnent.userId].sort();\n    const roomId = sortedUserIds.join('');\n    setRoom(roomId);\n    return roomId;\n  }\n\n\n  useEffect(() => {\n    socket.on(\"left_room\", (data) => {\n      alert(\"Opponent left the room\");\n      setShowGame(false);\n      setShowUserList(true);\n      setShowLeaveRoom(false);\n    });\n\n\n  }, [socket]);\n\nconst handleLeaveRoom = () => {\n  setShowGame(false);\n  setShowUserList(true);\n  setShowLeaveRoom(false);\n  socket.emit(\"leave_room\", { room: room });\n\n}\n\n  const handleLogout = () => {\n    setShowUserList(false);\n    axios.post('http://localhost:3000/logout', {\n      username\n    })\n      .then((response) => {\n        if (response.data.success) {\n          // Update the loggedIn state and hide the logout button\n          setLoggedIn(false);\n          setShowGame(false);\n          // Delete the userId and username cookies\n          document.cookie = `userId=; expires=Thu, 01 Jan 1970 00:00:00 GMT`;\n          document.cookie = `username=; expires=Thu, 01 Jan 1970 00:00:00 GMT`;\n        } else {\n          // Display an error message\n        }\n      })\n      .catch((error) => {\n        // Handle any errors\n      });\n  }\n\n  return (\n    <div>\n      {!loggedIn && (\n        <>\n          <LoginForm onLogin={() => setLoggedIn(true)} changeUsername={changeUsername} />\n          <RegistrationForm />\n        </>\n      )}\n        {loggedIn && (\n          <button onClick={handleLogout} className=\"btn btn-primary\">Logout</button>\n        )}\n        {showLeaveRoom && (\n          <button onClick={handleLeaveRoom} className=\"btn btn-primary\">Leave Room</button>\n        )}\n      {showUsereList && (\n        <UserList oponent={oponentUser} clickedUser={handleOponent} currentUser={user} />\n      )}\n\n      {/* <div>\n        {oponentUser !== null && (\n          <div>\n            <p>Oponent user: {oponentUser.username}</p>\n          </div>\n        )}\n      </div> */}\n\n      {showGame && (\n        <JoinGame socket={socket} username={username} room={room} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\User\\Desktop\\OnlineProject\\client2\\src\\components\\LoginForm.js",[],[],"C:\\Users\\User\\Desktop\\OnlineProject\\client2\\src\\components\\UserList.js",["53","54"],[],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport io from 'socket.io-client';\r\n\r\nfunction UserList(props) {\r\n\r\n    const {oponent,clickedUser, currentUser} = props;\r\n    const [users, setUsers] = useState([]);\r\n    useEffect(() => {\r\n        // Send a request to the server to get the initial list of users\r\n        axios.get('http://localhost:3000/users')\r\n        .then((response) => {\r\n            setUsers(response.data.filter((user) => user.isActive));\r\n        })\r\n        .catch((error) => {\r\n            // Handle any errors\r\n        });\r\n        \r\n\r\n    }, [users]);\r\n\r\n    return (\r\n        <div className=\"mx-auto w-50\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">Users</div>\r\n            <ul className=\"list-group list-group-flush\">\r\n              {users.map((user) => {\r\n                if (user.username !== currentUser.username) {\r\n                  return (\r\n                    <li key={user.userId} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                      {user.username}\r\n                      <button\r\n                        key={user.userId}\r\n                        onClick={() => clickedUser(user)}\r\n                        className=\"btn btn-primary\"\r\n                      >\r\n                        Play a game\r\n                      </button>\r\n                    </li>\r\n                  );\r\n                } else {\r\n                  return null;\r\n                }\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      );\r\n      \r\n}\r\n\r\nexport default UserList;\r\n",[],"C:\\Users\\User\\Desktop\\OnlineProject\\client2\\src\\components\\RegistrationForm.js",[],[],"C:\\Users\\User\\Desktop\\OnlineProject\\client2\\src\\components\\Chat.js",[],[],"C:\\Users\\User\\Desktop\\OnlineProject\\client2\\src\\components\\JoinGame.js",["55","56"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Chat from \"./Chat\";\r\nimport Game from \"./Game\";\r\n\r\nfunction JoinGame({ socket, username, room }) {\r\n  const [userCount, setUserCount] = useState([]);\r\n  const [isUserFirst, setIsUserFirst] = useState(1);\r\n\r\n\r\n\r\n\r\n  socket.emit(\"join_game\", { room: room });\r\n\r\n  useEffect(() => {\r\n    socket.on(\"joined_game\", (data) => {\r\n      setUserCount(data.clientsInRoom);\r\n    });\r\n    socket.on(\"setting_player\", (data) => {\r\n      setIsUserFirst(data.clientsInRoom);\r\n    });\r\n  socket.emit(\"set_player\", { room: room });\r\n\r\n  }, [socket]);\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {userCount < 2 && (\r\n        <div className=\"alert alert-primary\">waiting for player to join...</div>\r\n      )}\r\n      {userCount > 1 && (\r\n        <div className=\"row no-gutters\">\r\n\r\n          <div className=\"col-6\">\r\n            <div className=\"alert alert-primary\">Player joined, let's play</div>\r\n            <Game socket={socket} room={room} username={username} isUserFirst={isUserFirst}/>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n  \r\n}\r\n\r\nexport default JoinGame;\r\n","C:\\Users\\User\\Desktop\\OnlineProject\\client2\\src\\components\\Game.js",[],[],{"ruleId":"57","severity":1,"message":"58","line":84,"column":6,"nodeType":"59","endLine":84,"endColumn":14,"suggestions":"60"},{"ruleId":"61","severity":1,"message":"62","line":3,"column":8,"nodeType":"63","messageId":"64","endLine":3,"endColumn":10},{"ruleId":"61","severity":1,"message":"65","line":7,"column":12,"nodeType":"63","messageId":"64","endLine":7,"endColumn":19},{"ruleId":"61","severity":1,"message":"66","line":2,"column":8,"nodeType":"63","messageId":"64","endLine":2,"endColumn":12},{"ruleId":"57","severity":1,"message":"67","line":23,"column":6,"nodeType":"59","endLine":23,"endColumn":14,"suggestions":"68"},"react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'socket'. Either exclude it or remove the dependency array. Outer scope values like 'socket' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["69"],"no-unused-vars","'io' is defined but never used.","Identifier","unusedVar","'oponent' is assigned a value but never used.","'Chat' is defined but never used.","React Hook useEffect has a missing dependency: 'room'. Either include it or remove the dependency array.",["70"],{"desc":"71","fix":"72"},{"desc":"73","fix":"74"},"Update the dependencies array to be: []",{"range":"75","text":"76"},"Update the dependencies array to be: [room, socket]",{"range":"77","text":"78"},[2005,2013],"[]",[583,591],"[room, socket]"]