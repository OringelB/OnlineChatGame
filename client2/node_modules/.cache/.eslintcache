[{"C:\\Users\\User\\Desktop\\OnlineProject\\client2\\src\\index.js":"1","C:\\Users\\User\\Desktop\\OnlineProject\\client2\\src\\reportWebVitals.js":"2","C:\\Users\\User\\Desktop\\OnlineProject\\client2\\src\\App.js":"3","C:\\Users\\User\\Desktop\\OnlineProject\\client2\\src\\components\\LoginForm.js":"4","C:\\Users\\User\\Desktop\\OnlineProject\\client2\\src\\components\\UserList.js":"5","C:\\Users\\User\\Desktop\\OnlineProject\\client2\\src\\components\\RegistrationForm.js":"6","C:\\Users\\User\\Desktop\\OnlineProject\\client2\\src\\components\\Chat.js":"7","C:\\Users\\User\\Desktop\\OnlineProject\\client2\\src\\components\\JoinGame.js":"8","C:\\Users\\User\\Desktop\\OnlineProject\\client2\\src\\components\\Game.js":"9"},{"size":470,"mtime":1671096020537,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1670925998101,"results":"12","hashOfConfig":"11"},{"size":2911,"mtime":1671540536805,"results":"13","hashOfConfig":"11"},{"size":1529,"mtime":1671462408472,"results":"14","hashOfConfig":"11"},{"size":1182,"mtime":1671102422496,"results":"15","hashOfConfig":"11"},{"size":1678,"mtime":1670927172146,"results":"16","hashOfConfig":"11"},{"size":2270,"mtime":1671017527716,"results":"17","hashOfConfig":"11"},{"size":1039,"mtime":1671547983293,"results":"18","hashOfConfig":"11"},{"size":3869,"mtime":1671554734196,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"1spz1sn",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"23"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},"C:\\Users\\User\\Desktop\\OnlineProject\\client2\\src\\index.js",[],[],[],"C:\\Users\\User\\Desktop\\OnlineProject\\client2\\src\\reportWebVitals.js",[],[],"C:\\Users\\User\\Desktop\\OnlineProject\\client2\\src\\App.js",["50"],[],"C:\\Users\\User\\Desktop\\OnlineProject\\client2\\src\\components\\LoginForm.js",["51"],[],"C:\\Users\\User\\Desktop\\OnlineProject\\client2\\src\\components\\UserList.js",["52","53"],[],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport io from 'socket.io-client';\r\n\r\nfunction UserList(props) {\r\n\r\n    const {oponent,clickedUser, currentUser} = props;\r\n    const [users, setUsers] = useState([]);\r\n    useEffect(() => {\r\n        // Send a request to the server to get the initial list of users\r\n        axios.get('http://localhost:3000/users')\r\n        .then((response) => {\r\n            setUsers(response.data.filter((user) => user.isActive));\r\n        })\r\n        .catch((error) => {\r\n            // Handle any errors\r\n        });\r\n        \r\n\r\n    }, [users]);\r\n\r\n    return (\r\n        <ul>\r\n            {users.map((user) => {\r\n                if (user.username !== currentUser.username) {\r\n                    return (\r\n                        <li key={user.userId}>\r\n                            {user.username}\r\n                            <button key={user.userId} onClick={()=> clickedUser(user)}>Send Message</button>\r\n                        </li>\r\n                    );\r\n                } else {\r\n                    return null;\r\n                }\r\n            })}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default UserList;\r\n","C:\\Users\\User\\Desktop\\OnlineProject\\client2\\src\\components\\RegistrationForm.js",[],[],"C:\\Users\\User\\Desktop\\OnlineProject\\client2\\src\\components\\Chat.js",[],[],"C:\\Users\\User\\Desktop\\OnlineProject\\client2\\src\\components\\JoinGame.js",["54"],[],"C:\\Users\\User\\Desktop\\OnlineProject\\client2\\src\\components\\Game.js",["55","56"],[],"import React, { useState, useEffect } from 'react';\r\n\r\nfunction Game({ socket, room, isUserFirst }) {\r\n    const [board, setBoard] = useState(Array(9).fill(null));\r\n    const [currentPlayer, setCurrentPlayer] = useState('X');\r\n    const [playerShape, setPlayerShape] = useState(\"\");\r\n    const [winner, setWinner] = useState(null);\r\n\r\n    // helper function to set the player shape based on the value of isUserFirst\r\n    function setPlayerShapeBasedOnIsUserFirst(isUserFirst) {\r\n        if (isUserFirst === 2) {\r\n            setPlayerShape(\"X\");\r\n        }\r\n        else{\r\n            setPlayerShape(\"O\")\r\n        }\r\n    }\r\n\r\n    // useEffect hook to set the player shape and listen for changes to the game\r\n    useEffect(() => {\r\n        setPlayerShapeBasedOnIsUserFirst(isUserFirst);\r\n\r\n        socket.on(\"change_game\", (data) => {\r\n          setBoard(data.newBoard);\r\n          setCurrentPlayer(isUserFirst === 2 ? 'X' : 'O');\r\n          const winner = checkForWinner(data.newBoard);\r\n          if (winner) {\r\n              // if there is a winner, alert the winner and reset the game\r\n              alert(`The winner is ${winner}!`);\r\n              resetGame();\r\n          }\r\n        });\r\n      }, [socket,isUserFirst]);\r\n\r\n    // function to handle clicks on the squares\r\n    const handleSquareClick = async (index) => {\r\n\r\n        // if the square is already filled or it's not the current player's turn, do nothing\r\n        if (board[index] !== null || currentPlayer !== playerShape) {\r\n            return;\r\n        }\r\n\r\n        // make a copy of the board, update the clicked square, and set the new board\r\n        const newBoard = [...board];\r\n        newBoard[index] = currentPlayer;\r\n        setBoard(newBoard);\r\n\r\n        // send the updated board to the server and switch the current player\r\n        await socket.emit(\"updateGame\", { room: room, newBoard: newBoard });\r\n        setCurrentPlayer(currentPlayer === 'X' ? 'O' : 'X');\r\n\r\n        // check if there is a winner\r\n        const winner = checkForWinner(newBoard);\r\n        if (winner) {\r\n            // if there is a winner, alert the winner and reset the game\r\n            alert(`The winner is ${winner}!`);\r\n            resetGame();\r\n        }\r\n    };\r\n    // function to check if there is a winner\r\n    function checkForWinner(board) {\r\n        // check rows\r\n        for (let i = 0; i < 3; i++) {\r\n            if (board[i * 3] && board[i * 3] === board[i * 3 + 1] && board[i * 3 + 1] === board[i * 3 + 2]) {\r\n                return board[i * 3];\r\n            }\r\n        }\r\n        // check columns\r\n        for (let i = 0; i < 3; i++) {\r\n            if (board[i] && board[i] === board[i + 3] && board[i + 3] === board[i + 6]) {\r\n                return board[i];\r\n            }\r\n        }\r\n        // check diagonals\r\n        if (board[0] && board[0] === board[4] && board[4] === board[8]) {\r\n            return board[0];\r\n        }\r\n        if (board[2] && board[2] === board[4] && board[4] === board[6]) {\r\n            return board[2];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // function to reset the game\r\n    function resetGame() {\r\n        setBoard(Array(9).fill(null));\r\n        setCurrentPlayer('X');\r\n        setWinner(null);\r\n        handleSquareClick(0);\r\n    }\r\n\r\n    return (\r\n        <div className=\"game\">\r\n            <h1>whos turn: {currentPlayer}</h1>\r\n            <h1>you are: {playerShape}</h1>\r\n            <h1>{isUserFirst}</h1>\r\n            <div className=\"board\">\r\n                {board.map((square, index) => (\r\n                    <div\r\n                        key={index}\r\n                        className=\"square\"\r\n                        onClick={() => handleSquareClick(index)}\r\n                    >\r\n                        {square}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Game;\r\n",{"ruleId":"57","severity":1,"message":"58","line":1,"column":27,"nodeType":"59","messageId":"60","endLine":1,"endColumn":36},{"ruleId":"57","severity":1,"message":"61","line":3,"column":8,"nodeType":"59","messageId":"60","endLine":3,"endColumn":10},{"ruleId":"57","severity":1,"message":"61","line":3,"column":8,"nodeType":"59","messageId":"60","endLine":3,"endColumn":10},{"ruleId":"57","severity":1,"message":"62","line":7,"column":12,"nodeType":"59","messageId":"60","endLine":7,"endColumn":19},{"ruleId":"63","severity":1,"message":"64","line":23,"column":6,"nodeType":"65","endLine":23,"endColumn":14,"suggestions":"66"},{"ruleId":"57","severity":1,"message":"67","line":7,"column":12,"nodeType":"59","messageId":"60","endLine":7,"endColumn":18},{"ruleId":"63","severity":1,"message":"68","line":33,"column":10,"nodeType":"65","endLine":33,"endColumn":30,"suggestions":"69"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'io' is defined but never used.","'oponent' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'room'. Either include it or remove the dependency array.","ArrayExpression",["70"],"'winner' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'resetGame'. Either include it or remove the dependency array.",["71"],{"desc":"72","fix":"73"},{"desc":"74","fix":"75"},"Update the dependencies array to be: [room, socket]",{"range":"76","text":"77"},"Update the dependencies array to be: [socket, isUserFirst, resetGame]",{"range":"78","text":"79"},[583,591],"[room, socket]",[1202,1222],"[socket, isUserFirst, resetGame]"]